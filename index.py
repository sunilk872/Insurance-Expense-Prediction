# -*- coding: utf-8 -*-
"""insurence.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16t9MM4onybTt9YP8JjiwNnu5FtO-P-mA
"""

import pandas as pd
import numpy as np
import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import GradientBoostingRegressor
from pickle import load

# Set the page title
st.title("Model Deployment: Prediction of Medical Expenses")

# Sidebar header for input parameters
st.sidebar.header("User Input Parameters")

# Function to collect user inputs
def user_input_features():
    AGE = st.sidebar.number_input("Insert the Age", min_value=0, max_value=100, value=25)
    SEX = st.sidebar.selectbox("Gender (1-Male, 0-Female):", ("1", "0"))
    BMI = st.sidebar.number_input("Insert the BMI:", min_value=0.0, max_value=60.0, value=25.0, step=0.1)
    CHILDREN = st.sidebar.selectbox("Number of Children:", ("0", "1", "2", "3", "4", "5"))
    SMOKER = st.sidebar.selectbox("Smoker (1-Yes, 0-No):", ("1", "0"))
    REGION = st.sidebar.selectbox(
        "Region (0-Southwest, 1-Southeast, 2-Northwest, 3-Northeast):",
        ("0", "1", "2", "3"),
    )
    data = {
        "age": AGE,
        "sex": SEX,
        "bmi": BMI,
        "children": CHILDREN,
        "smoker": SMOKER,
        "region": REGION,
    }
    features = pd.DataFrame(data, index=[0])
    return features

# Collect user inputs
df = user_input_features()

# Display user inputs
st.subheader("User Input Parameters")
st.write(df)

# Load the trained model
MODEL_FILE = "E:\\excelR\\project1\\finalized_model.pkl"  # Ensure the correct path
try:
    loaded_model = load(open(MODEL_FILE, "rb"))
except FileNotFoundError:
    st.error("Model file not found! Please ensure the model file is present.")

# Prediction
if loaded_model:
    prediction = loaded_model.predict(df)
    prediction = np.round(prediction, 2)

    # Display prediction result
    st.subheader("The Results:")
    st.write(f"The Medical Expenses are: ${prediction[0]:,.2f}")
    st.success(f"The Medical Expenses are: ${prediction[0]:,.2f}")

    # Visualization Section
    st.subheader("Visualization: How Inputs Affect Prediction")

    # Example visualization: Bar chart
    fig, ax = plt.subplots(figsize=(8, 5))
    input_labels = ["Age", "Gender", "BMI", "Children", "Smoker", "Region"]
    input_values = [
        df["age"].iloc[0],
        int(df["sex"].iloc[0]),
        df["bmi"].iloc[0],
        int(df["children"].iloc[0]),
        int(df["smoker"].iloc[0]),
        int(df["region"].iloc[0]),
    ]

    sns.barplot(x=input_labels, y=input_values, ax=ax, palette="viridis")
    ax.set_title("User Input Parameters")
    ax.set_ylabel("Value")
    ax.set_xlabel("Parameters")
    st.pyplot(fig)

    # Optional: Add a histogram for predicted expenses
    st.subheader("Distribution of Predicted Medical Expenses")
    fig, ax = plt.subplots(figsize=(8, 5))
    sns.histplot(prediction, kde=True, ax=ax, color="blue", bins=10)
    ax.set_title("Predicted Medical Expenses Distribution")
    ax.set_xlabel("Medical Expenses ($)")
    ax.set_ylabel("Frequency")
    st.pyplot(fig)